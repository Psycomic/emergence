* Le langage de programmation Yuki
** Introduction
   Yuki est le langage de programmation d'Emergence. C'est un langage
   de programmation dynamique, orienté objet, et il supporte la
   métaprogrammation.

   Yuki est un membre de la famille LISP, qui se caractérise par un
   syntaxe qui peut paraître étrange aux débutants, mais qui est très
   élégante et permet de faire des choses que la plupart des langages
   de programmation sont incapables de faire.

   Si vous avez déjà programmé en Python, Perl, ou Ruby, le langage
   vous sera sans doute familier.

** Syntaxe
   En Yuki, tout est une expression. Il y a deux types d'expressions:
   - Les appels de fonctions, qui sont formés entre parenthèses, et
     dont le premier élément est la fonction à appliquer, et le reste
     sont les arguments donnés à la fonction: =(fonction argument1
     argument2)=
   - Les atomes: tout ce qui n'est pas entre parenthèses: par exemple
     les noms de variables, les nombres ou les chaînes de caractères.

   Voici des exemples d'expressions, suivis par le résultat qu'elles
   produisent, indiqué par la flèche _=>_

#+begin_src scheme
65 => 65
(+ 5 6) => 11
(* (+ 9 5) 8) => 112
#+end_src

   Dans cette exemple, nous voyons l'application de la fonction +, qui
   fait l'addition de ses arguments. Yuki peut être utilisé comme une
   calculette, et faire des calculs arbitraires. Grâce à la syntaxe
   très explicite, le programmeur n'a pas besoin de se soucier de la
   précédence de la multiplication sur l'addition. L'expression
   mathématique =2 * (3 + 4)= est exprimée comme =(* 2 (+ 3 4))=.

   Pour continuer la tradition des livres de programmation, voici
   un programme qui affiche "Hello, world!" dans la console:

#+begin_src scheme
(format "Hello, world")
#+end_src
