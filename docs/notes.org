* DONE Batch renderer
  Render several objects in one call by batching them together in a
  single vertex buffer.
** TODO Batch drawable deletion
*** Naive solution
	Displace entire vertex buffer to overwrite where the drawable part
	of the buffer was. This is very inefficient, because we have to
	re-displace and entire array in GPU memory

#+BEGIN_SRC
									Initial configuration
 +--------------------------------------------+-------------------------------+---------------------------+
 | First batch drawable                       |  Second batch drawable        |  third batch drawable  	  |
 +--------------------------------------------+-------------------------------+---------------------------+
																										  |
																									 Size of buffer
													 		           		X---------------------------X
																	Size of buffer
									Deleting 2 drawables				  |
 +--------------------------------------------+---------------------------+-------------------------------+
 | First batch drawable                       |  third batch drawable  	  |         Junk                  |
 +--------------------------------------------+--------------\------------+-------------------------------+
															  ---\    		   ---/
                                                                  Copy content
#+END_SRC
*** Advanced solution
	I could try something using the index buffer: the drawable
	vertices stay were they were, and only the element buffer
	changes. A big hole in the buffer will be left, where new data
	could be allocated.
** TODO Per-batch drawable uniforms
   *The problem*
   With batch draw, I have to pass parameters in the
   vertex attributes, but sometimes, like for a widget or for a text
   object, I need different attributes not for the vertices, but for
   the entire text.
   *How to solve it*
   I think the best solution would be to add an index to every vertex
   attribute, like this:
#+BEGIN_SRC glsl
#version 330 core

struct BatchDrawableUniforms {
	vec3 position;
	float width, height;
};

#define MAX_BATCH_DRAWABLES 256

uniform BatchDrawableUniforms parameters[MAX_BATCH_DRAWABLES];

layout(location = 0) in vec3 vertexPos; // 0 1 2
layout(location = 1) in float index;

void main() {
	gl_Position = vec4(vertexPos, 1);

	int i = (int)index;
	BatchDrawableUniforms my_uniforms = parameters[i];
}
#+END_SRC
* DONE Rotate text bar
* TODO Possible bug with text rendering in windows
  When I render text, I do this

#+BEGIN_SRC c
text_set_depth(window->title, window->depth + 0.1f);

for (uint j = 0; j < window->widgets_count; j++)
	widget_set_depth(window->widgets[j], window->depth + 0.1f);
#+END_SRC

  It kinds of works for now, but when I'll have more windows, it might
  overflow on the others
* TODO Stencil buffer to hide text
  Now, text inside the window overflows on the edges if I try to
  minimize it.
* TODO Theme system
  To have an uniform way of creating widget and changing window's colors.
* DONE Window bar depth problems
  The window bar is not at the right depth
